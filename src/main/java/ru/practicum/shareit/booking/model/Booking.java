package ru.practicum.shareit.booking.model;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import ru.practicum.shareit.item.model.Item;
import ru.practicum.shareit.user.model.User;

import javax.persistence.*;
import java.time.LocalDateTime;


@Entity
@Setter
@Getter
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "bookings")
public class Booking {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    @Column(name = "start_time")
    private LocalDateTime start;

    @Column(name = "end_time")
    private LocalDateTime end;

    @ManyToOne
    @JoinColumn(name = "item_id")
    private Item item;

    @ManyToOne
    @JoinColumn(name = "booker")
    private User booker;

    @Enumerated(EnumType.STRING)
    @Column(name = "status")
    private Status status;
}

//    create TABLE IF NOT EXISTS BOOKINGS (
//        id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
//        start_time TIMESTAMP WITHOUT TIME ZONE not null,
//        end_time TIMESTAMP WITHOUT TIME ZONE not null,
//        item_id BIGINT not null ,
//        booker BIGINT not null ,
//        status varchar (16) not null,
//        FOREIGN KEY (booker) REFERENCES users (id),
//        FOREIGN KEY (item_id) REFERENCES items (id)


 create  TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL unique ,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

create table if not exists requests (
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
description varchar (200) not null,
requestor INTEGER not null,
created TIMESTAMP WITHOUT TIME ZONE not null,
FOREIGN KEY (requestor) REFERENCES users (id)
);

create table if not exists items (
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar (50) not null,
description varchar (200) not null,
available  boolean not null,
owner_id INTEGER not null,
request_id INTEGER,
FOREIGN KEY (request_id) REFERENCES requests (id),
FOREIGN KEY (owner_id) REFERENCES users (id)
);
--create TABLE IF NOT EXISTS statuses (
--id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--name varchar (20) not null
--);

create TABLE IF NOT EXISTS BOOKINGS (
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
startTime TIMESTAMP WITHOUT TIME ZONE not null,
endTime TIMESTAMP WITHOUT TIME ZONE not null,
itemId INTEGER not null ,
booker INTEGER not null ,
status varchar (16)
--status integer not null,
FOREIGN KEY (booker) REFERENCES users (id),
FOREIGN KEY (itemId) REFERENCES items (id)
--FOREIGN KEY (status) REFERENCES statuses (id)
);

 CREATE TABLE IF NOT EXISTS COMMENTS (
   id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   text varchar (200) not null,
   author INTEGER not null  ,
   itemId INTEGER not null ,
   created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

   FOREIGN KEY (author) REFERENCES users (id),
   FOREIGN KEY (itemId) REFERENCES items (id)
   );





